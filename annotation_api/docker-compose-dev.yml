name: pyronear
services:
  db:
    image: postgres:15-alpine
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=dummy_pg_user
      - POSTGRES_PASSWORD=dummy_pg_pwd
      - POSTGRES_DB=dummy_pg_db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dummy_pg_user -d dummy_pg_db'"]
      interval: 10s
      timeout: 20s
      retries: 10

  # ref link: https://github.com/localstack/localstack/blob/master/docker-compose.yml
  localstack:
    image: localstack/localstack:1.4.0
    ports:
      - 4566:4566
    # environment variables details: https://docs.localstack.cloud/references/configuration/
    environment:
      - EDGE_PORT=4566
      - SERVICES=s3
    volumes:
      - ./scripts/localstack:/etc/localstack/init/ready.d
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "awslocal --endpoint-url=http://localhost:4566 s3 ls s3://admin",
        ]
      interval: 10s
      timeout: 20s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: test
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_healthy
    ports:
      - "5050:5050"
    environment:
      - SUPPORT_EMAIL=${SUPPORT_EMAIL:-test@example.com}
      - DEBUG=true
      - SQLALCHEMY_SILENCE_UBER_WARNING=1
      # DB
      - POSTGRES_URL=postgresql+asyncpg://dummy_pg_user:dummy_pg_pwd@db/dummy_pg_db
      # S3
      - S3_ENDPOINT_URL=http://localstack:4566
      - S3_ACCESS_KEY=fake
      - S3_SECRET_KEY=fake
      - S3_REGION=us-east-1
      - S3_PROXY_URL=http://localhost:4566
      - SERVER_NAME=habile
      # Authentication
      - AUTH_USERNAME=admin
      - AUTH_PASSWORD=admin12345
      - JWT_SECRET=your_jwt_secret_key_change_in_production_please
      - ACCESS_TOKEN_EXPIRE_HOURS=24
    volumes:
      - ./src/app:/app/app
      - ./src/alembic.ini:/app/alembic.ini
      - ./src/tests:/app/tests
    command: "sh -c 'python app/db.py && uvicorn app.main:app --reload --host 0.0.0.0 --port 5050 --proxy-headers'"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:5050/status"]
      interval: 10s
      timeout: 20s
      retries: 10
