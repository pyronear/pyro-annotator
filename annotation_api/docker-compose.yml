name: pyronear
services:
  traefik:
      image: traefik:v2.9.6
      container_name: traefik
      ports:
        # http(s) traffic
        - "80:80"
        - "443:443"
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
        - type: bind
          source: ./acme.json
          target: /acme.json
      labels:
        - "traefik.http.middlewares.strip-www.redirectregex.regex=^https?://(www\\.)(.+)"
        - "traefik.http.middlewares.strip-www.redirectregex.replacement=https://$${2}"
        - "traefik.http.middlewares.strip-www.redirectregex.permanent=true"
      command:
        # Enable the Traefik log, for configurations and errors
        - "--log.level=INFO"
        # Enable Docker in Traefik, so that it reads labels from Docker services
        - "--providers.docker=true"
        # Do not expose all Docker services, only the ones explicitly exposed
        - "--providers.docker.exposedbydefault=false"
        # HTTPS
        - "--entryPoints.web.address=:80"
        - "--entryPoints.websecure.address=:443"
        # Certificate
        - "--certificatesresolvers.pyroresolver.acme.tlschallenge=true"
        - "--certificatesresolvers.pyroresolver.acme.email=contact@pyronear.org"
        - "--certificatesresolvers.default.acme.storage=/acme.json"
      restart: always
      healthcheck:
        test: "wget --no-verbose --tries=1 --spider  https://annotationdev.pyronear.org/status || exit 1"
        interval: 20s
        timeout: 20s
        retries: 10
      depends_on:
        - backend
  db:
    image: postgres:15-alpine
    expose:
      - 5432
    environment:
      - POSTGRES_USER=dummy_pg_user
      - POSTGRES_PASSWORD=dummy_pg_pwd
      - POSTGRES_DB=dummy_pg_db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dummy_pg_user -d dummy_pg_db'"]
      interval: 10s
      timeout: 20s
      retries: 10

  # ref link: https://github.com/localstack/localstack/blob/master/docker-compose.yml
  localstack:
    image: localstack/localstack:1.4.0
    ports:
      - 4566:4566
    # environment variables details: https://docs.localstack.cloud/references/configuration/
    environment:
      - EDGE_PORT=4566
      - SERVICES=s3
    volumes:
      - ./scripts/localstack:/etc/localstack/init/ready.d
    healthcheck:
      test: ["CMD-SHELL", "awslocal --endpoint-url=http://localhost:4566 s3 ls s3://admin"]
      interval: 10s
      timeout: 20s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_healthy
    ports:
      - "5050:5050"
    environment:
      - POSTGRES_URL=postgresql+asyncpg://dummy_pg_user:dummy_pg_pwd@db/dummy_pg_db
      - SUPERADMIN_LOGIN=superadmin_login
      - SUPERADMIN_PWD=superadmin_pwd
      - SUPERADMIN_ORG=admin
      - S3_ENDPOINT_URL=http://localstack:4566
      - S3_ACCESS_KEY=fake
      - S3_SECRET_KEY=fake
      - S3_REGION=us-east-1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`annotationdev.pyronear.org`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=pyroresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=5050"
    volumes:
      - ./src/:/app/
    command: "sh -c 'python app/db.py && uvicorn app.main:app --reload --host 0.0.0.0 --port 5050 --proxy-headers'"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:5050/status"]
      interval: 10s
      timeout: 20s
      retries: 10
